[package]
name = "cainam-core"
version = "0.1.0"
edition = "2021"
authors = ["Matt Gunnin <matt@cainamventures.com>"]
repository = "https://github.com/cainamventures/cainam-core"
readme = "README.md"
keywords = ["ai", "solana", "rust", "cainam", "cainam-ventures"]
description = "Core functionality for the Cainam project"

[[bin]]
name = "autonomous-trader"
path = "cainam-birdeye/examples/basic_usage.rs"

[workspace]
resolver = "2"
members = [
    "cainam-birdeye",
    "cainam-discord",
    "cainam-twitter",
    "rig-core",
    "rig-neo4j",
    "rig-postgres"
]

[workspace.dependencies]
# Core dependencies
anyhow = "1.0.95"
async-trait = "0.1.85"
futures = "0.3"
thiserror = "1.0"
tokio = { version = "1.43.0", features = ["full"] }
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.19", features = ["env-filter", "json", "time"] }

# AI/ML
openai = { version = "1.0.0-alpha.18" }

# Solana ecosystem
solana-client = "2.1.12"
solana-sdk = "2.1.12"
solana-program = "2.1.12"
anchor-client = "0.29"
anchor-lang = "0.29"
helius = "0.2.4"

# Database
sqlx = { version = "0.8.3", features = ["postgres", "runtime-tokio", "tls-native-tls", "chrono", "bigdecimal", "uuid", "json", "macros", "time", "migrate", "any", "derive"] }
tokio-postgres = { version = "0.7", features = ["with-uuid-1", "with-chrono-0_4"] }
pgvector = { version = "0.4", features = ["sqlx"] }

# Serialization
serde = { version = "1.0.217", features = ["derive"] }
serde_json = "1.0.138"
schemars = "0.8.21"

# HTTP client
reqwest = { version = "0.12.12", features = ["json"] }

# Time and dates
chrono = { version = "0.4", features = ["serde"] }
time = { version = "0.3", features = ["serde"] }

# Utilities
uuid = { version = "1.0", features = ["serde", "v4"] }

# Important shared dependencies
rustls = "0.23.15"
tokio-tungstenite = "0.21.0"

[dependencies]
# Core dependencies
tokio.workspace = true
anyhow.workspace = true
thiserror.workspace = true
tracing.workspace = true
tracing-subscriber.workspace = true
futures.workspace = true
async-trait.workspace = true

# AI/ML
openai.workspace = true

# Solana
solana-client.workspace = true
solana-sdk.workspace = true
helius.workspace = true

# Database
sqlx.workspace = true
tokio-postgres.workspace = true
pgvector.workspace = true
qdrant-client = "1.7"

# Serialization
serde.workspace = true
serde_json.workspace = true
schemars.workspace = true
bigdecimal = { version = "0.4.7", features = ["serde"] }

# HTTP client
reqwest.workspace = true

# Time and dates
chrono.workspace = true
time.workspace = true

# Utilities
uuid.workspace = true

# Discord
# serenity = { version = "0.12.4", default-features = false, features = ["client", "gateway", "rustls_backend", "cache", "model", "http"], git = "https://github.com/serenity-rs/serenity.git", branch = "current" }

# Environment variables
dotenvy = "0.15.7"

# Framework
rig-core = { path = "rig-core", features = ["all", "derive"] }
rig-postgres = { version = "0.1.1", path = "rig-postgres" }

# Local crates
cainam-birdeye = { path = "cainam-birdeye" }
cainam-discord = { path = "cainam-discord" }
cainam-twitter = { path = "cainam-twitter" }


[dev-dependencies]
tokio-test = "0.4"
pretty_assertions = "1.0"
test-log = { version = "0.2", features = ["trace"] }
env_logger = "0.10"
tokio = { version = "1.43.0", features = ["full", "test-util"] }
mockall = "0.12.1"
